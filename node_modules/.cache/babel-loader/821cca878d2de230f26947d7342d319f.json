{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-list-item/char-list-item.js\";\nimport React, { Component } from 'react';\nimport CharTypes from '../char-types'; // import ServicePokedex from '../../services';\n\nimport styled from 'styled-components';\nimport spinner from '../spinner/Spinner-5.gif';\nimport './char-list-item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n_c = ImgWrapper;\nconst Sprite = styled.img`\n    width: 60%;\n    object-fit: cover;\n`;\n_c2 = Sprite;\nexport default class CharListItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nameNew: '',\n      imgURL: '',\n      charID: '',\n      imgLoading: true,\n      manyRequests: false,\n      types: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      name,\n      url\n    } = this.props;\n    const charID = url.split('/')[url.split('/').length - 2];\n    const imgURL = `https://pokeres.bastionbot.org/images/pokemon/${charID}.png`;\n    const nameNew = name[0].toUpperCase() + name.slice(1); // const types = {}\n\n    this.setState({\n      nameNew,\n      charID,\n      imgURL\n    });\n  }\n\n  render() {\n    // const charTypes = (\n    //     <CharTypes\n    //         getData={this.SerrvicePokedex.getResources}/>\n    // )\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char-list__item\",\n      children: [/*#__PURE__*/_jsxDEV(ImgWrapper, {\n        children: [this.state.imgLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: spinner,\n          style: {\n            width: '5rem',\n            height: '5rem'\n          },\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Sprite, {\n          className: \"char-img\",\n          src: this.state.imgURL,\n          onLoad: () => this.setState({\n            imgLoading: false\n          }),\n          onError: () => this.setState({\n            manyRequests: true\n          }),\n          style: this.state.manyRequests ? {\n            display: 'none'\n          } : this.state.imgLoading ? null : {\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), this.state.manyRequests ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"To many requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"char__title\",\n        children: this.state.nameNew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CharTypes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImgWrapper\");\n$RefreshReg$(_c2, \"Sprite\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-list-item/char-list-item.js"],"names":["React","Component","CharTypes","styled","spinner","ImgWrapper","div","Sprite","img","CharListItem","state","nameNew","imgURL","charID","imgLoading","manyRequests","types","componentDidMount","name","url","props","split","length","toUpperCase","slice","setState","render","width","height","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAO,sBAAP;;AAEA,MAAMC,UAAU,GAAGF,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,U;AAQN,MAAME,MAAM,GAAGJ,MAAM,CAACK,GAAI;AAC1B;AACA;AACA,CAHA;MAAMD,M;AAKN,eAAe,MAAME,YAAN,SAA2BR,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAE/CS,KAF+C,GAEvC;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,UAAU,EAAE,IAJR;AAKJC,MAAAA,YAAY,EAAE,KALV;AAOJC,MAAAA,KAAK,EAAE;AAPH,KAFuC;AAAA;;AAY/CC,EAAAA,iBAAiB,GAAI;AACjB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAc,KAAKC,KAAzB;AAEA,UAAMP,MAAM,GAAGM,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeF,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,MAAf,GAAwB,CAAvC,CAAf;AACA,UAAMV,MAAM,GAAI,iDAAgDC,MAAO,MAAvE;AACA,UAAMF,OAAO,GAAGO,IAAI,CAAC,CAAD,CAAJ,CAAQK,WAAR,KAAwBL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAxC,CALiB,CAMjB;;AAEA,SAAKC,QAAL,CAAc;AACVd,MAAAA,OADU;AAEVE,MAAAA,MAFU;AAGVD,MAAAA;AAHU,KAAd;AAMH;;AAEDc,EAAAA,MAAM,GAAI;AACN;AACA;AACA;AACA;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI,QAAC,UAAD;AAAA,mBAEQ,KAAKhB,KAAL,CAAWI,UAAX,gBACI;AACI,UAAA,GAAG,EAAEV,OADT;AAEI,UAAA,KAAK,EAAE;AAACuB,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,MAAM,EAAE;AAAxB,WAFX;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ,GAKI,IAPZ,eAUI,QAAC,MAAD;AACI,UAAA,SAAS,EAAC,UADd;AAEI,UAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWE,MAFpB;AAGI,UAAA,MAAM,EAAE,MAAM,KAAKa,QAAL,CAAc;AAACX,YAAAA,UAAU,EAAE;AAAb,WAAd,CAHlB;AAII,UAAA,OAAO,EAAE,MAAM,KAAKW,QAAL,CAAc;AAACV,YAAAA,YAAY,EAAE;AAAf,WAAd,CAJnB;AAKI,UAAA,KAAK,EACD,KAAKL,KAAL,CAAWK,YAAX,GACM;AAACc,YAAAA,OAAO,EAAE;AAAV,WADN,GAEM,KAAKnB,KAAL,CAAWI,UAAX,GACA,IADA,GAEA;AAACe,YAAAA,OAAO,EAAE;AAAV;AAVd;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAuBK,KAAKnB,KAAL,CAAWK,YAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,GAEG,IAzBR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA4BI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6B,KAAKL,KAAL,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA6BI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AArE8C","sourcesContent":["import React, { Component } from 'react';\nimport CharTypes from '../char-types';\n// import ServicePokedex from '../../services';\n\nimport styled from 'styled-components';\n\nimport spinner from '../spinner/Spinner-5.gif';\n\nimport './char-list-item.css';\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n\nconst Sprite = styled.img`\n    width: 60%;\n    object-fit: cover;\n`;\n\nexport default class CharListItem extends Component{\n    // ServicePokedex = new ServicePokedex();\n    state = {\n        nameNew: '',\n        imgURL: '',\n        charID: '',\n        imgLoading: true,\n        manyRequests: false,\n    \n        types: {}\n    }\n\n    componentDidMount () {\n        const {name, url} = this.props;\n\n        const charID = url.split('/')[url.split('/').length - 2];\n        const imgURL = `https://pokeres.bastionbot.org/images/pokemon/${charID}.png`;\n        const nameNew = name[0].toUpperCase() + name.slice(1)\n        // const types = {}\n\n        this.setState({\n            nameNew,\n            charID,\n            imgURL\n        })\n\n    }\n\n    render () {\n        // const charTypes = (\n        //     <CharTypes\n        //         getData={this.SerrvicePokedex.getResources}/>\n        // )\n\n        return (\n            <div className=\"char-list__item\">\n                <ImgWrapper>\n                    {\n                        this.state.imgLoading ? (\n                            <img\n                                src={spinner}\n                                style={{width: '5rem', height: '5rem'}}\n                                className='spinner'/>\n                        ) : null\n                    }\n\n                    <Sprite\n                        className='char-img'\n                        src={this.state.imgURL}\n                        onLoad={() => this.setState({imgLoading: false})}\n                        onError={() => this.setState({manyRequests: true})}\n                        style={\n                            this.state.manyRequests\n                                ? {display: 'none'}\n                                : this.state.imgLoading\n                                ? null\n                                : {display: 'block'}\n                        }\n                        />\n                    {this.state.manyRequests ? (\n                        <h4>To many requests</h4>\n                    ) : null}\n                </ImgWrapper>\n                <h3 className='char__title'>{this.state.nameNew}</h3>\n                <CharTypes/>\n\n            </div>            \n        )\n    \n    }\n}\n"]},"metadata":{},"sourceType":"module"}