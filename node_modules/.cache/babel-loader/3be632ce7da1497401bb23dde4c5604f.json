{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-types/char-types.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  fire: '#FF5300',\n  grass: '#00AA00',\n  electric: '#5ED1BA',\n  water: '#1240AB',\n  ground: '#A64B00',\n  rock: '#6A8D8D',\n  fairy: '#6AFF00',\n  poison: '#00FF00',\n  bug: '#BC00FF',\n  dragon: '#FFE340',\n  physic: '#FF40FF',\n  flying: '#69C9BC',\n  fighting: '#A60004',\n  normal: '#BBBBBB'\n};\nconst TypeList = styled.ul`\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    align-items: center;\n    margin: 1rem 0;\n    list-style: none;\n`;\n_c = TypeList;\nconst TypeListItem = styled.li`\n    display: inline-block;\n    text-align: center;\n    // border: 1px solid orangered;\n    margin: 0.25rem;\n    padding: 0.25rem 0.75rem;\n    border-radius: 4px;\n    transition: all 0.3s ease-in-out;\n\n    &:hover {\n        cursor: pointer;\n        color: white;\n    }\n\n    background-color: ${props => props.bg}\n`;\n_c2 = TypeListItem;\n\nclass CharTypes extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderItems = arr => {\n      return arr.map(item => {\n        const {\n          slot,\n          type\n        } = item;\n        const {\n          name\n        } = type;\n        if (!Object.keys(COLORS).includes(name)) return false;\n        let bgColor = COLORS[name];\n        const nameNew = name[0].toUpperCase() + name.slice(1);\n        return /*#__PURE__*/_jsxDEV(TypeListItem, {\n          bg: bgColor,\n          onClick: () => {\n            this.props.filterCards(name);\n          },\n          children: nameNew\n        }, slot, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    const {\n      types\n    } = this.props;\n    const listItems = this.renderItems(types);\n    console.log(this.props.active);\n    return /*#__PURE__*/_jsxDEV(TypeList, {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CharTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeList\");\n$RefreshReg$(_c2, \"TypeListItem\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-types/char-types.js"],"names":["React","Component","styled","COLORS","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","physic","flying","fighting","normal","TypeList","ul","TypeListItem","li","props","bg","CharTypes","renderItems","arr","map","item","slot","type","name","Object","keys","includes","bgColor","nameNew","toUpperCase","slice","filterCards","render","types","listItems","console","log","active"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAoB,mBAApB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE,SADK;AAEXC,EAAAA,KAAK,EAAE,SAFI;AAGXC,EAAAA,QAAQ,EAAE,SAHC;AAIXC,EAAAA,KAAK,EAAE,SAJI;AAKXC,EAAAA,MAAM,EAAE,SALG;AAMXC,EAAAA,IAAI,EAAE,SANK;AAOXC,EAAAA,KAAK,EAAE,SAPI;AAQXC,EAAAA,MAAM,EAAE,SARG;AASXC,EAAAA,GAAG,EAAE,SATM;AAUXC,EAAAA,MAAM,EAAE,SAVG;AAWXC,EAAAA,MAAM,EAAE,SAXG;AAYXC,EAAAA,MAAM,EAAE,SAZG;AAaXC,EAAAA,QAAQ,EAAE,SAbC;AAcXC,EAAAA,MAAM,EAAE;AAdG,CAAf;AAiBA,MAAMC,QAAQ,GAAGhB,MAAM,CAACiB,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,Q;AASN,MAAME,YAAY,GAAGlB,MAAM,CAACmB,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBC,KAAK,IAAIA,KAAK,CAACC,EAAG;AAC1C,CAfA;MAAMH,Y;;AAiBN,MAAMI,SAAN,SAAwBvB,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BwB,WAF8B,GAEfC,GAAD,IAAS;AACnB,aAAOA,GAAG,CAACC,GAAJ,CAASC,IAAD,IAAU;AAErB,cAAM;AAACC,UAAAA,IAAD;AAAOC,UAAAA;AAAP,YAAeF,IAArB;AACA,cAAM;AAACG,UAAAA;AAAD,YAASD,IAAf;AAEA,YAAI,CAACE,MAAM,CAACC,IAAP,CAAY9B,MAAZ,EAAoB+B,QAApB,CAA6BH,IAA7B,CAAL,EAAyC,OAAO,KAAP;AACzC,YAAII,OAAO,GAAGhC,MAAM,CAAC4B,IAAD,CAApB;AACA,cAAMK,OAAO,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQM,WAAR,KAAwBN,IAAI,CAACO,KAAL,CAAW,CAAX,CAAxC;AAEA,4BACI,QAAC,YAAD;AACI,UAAA,EAAE,EAAEH,OADR;AAGI,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKb,KAAL,CAAWiB,WAAX,CAAuBR,IAAvB;AAA6B,WAHjD;AAAA,oBAKSK;AALT,WAESP,IAFT;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAlBM,CAAP;AAmBH,KAtB6B;AAAA;;AAwB9BW,EAAAA,MAAM,GAAI;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKnB,KAArB;AACA,UAAMoB,SAAS,GAAG,KAAKjB,WAAL,CAAiBgB,KAAjB,CAAlB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWuB,MAAvB;AAEA,wBACI,QAAC,QAAD;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnC6B;;AAsClC,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled from  'styled-components';\n\nconst COLORS = {\n    fire: '#FF5300',\n    grass: '#00AA00',\n    electric: '#5ED1BA',\n    water: '#1240AB',\n    ground: '#A64B00',\n    rock: '#6A8D8D',\n    fairy: '#6AFF00',\n    poison: '#00FF00',\n    bug: '#BC00FF',\n    dragon: '#FFE340',\n    physic: '#FF40FF',\n    flying: '#69C9BC',\n    fighting: '#A60004',\n    normal: '#BBBBBB'\n};\n\nconst TypeList = styled.ul`\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    align-items: center;\n    margin: 1rem 0;\n    list-style: none;\n`;\n\nconst TypeListItem = styled.li`\n    display: inline-block;\n    text-align: center;\n    // border: 1px solid orangered;\n    margin: 0.25rem;\n    padding: 0.25rem 0.75rem;\n    border-radius: 4px;\n    transition: all 0.3s ease-in-out;\n\n    &:hover {\n        cursor: pointer;\n        color: white;\n    }\n\n    background-color: ${props => props.bg}\n`;\n\nclass CharTypes extends Component {\n\n    renderItems = (arr) => {\n        return arr.map((item) => {\n\n            const {slot, type} = item;\n            const {name} = type;            \n\n            if (!Object.keys(COLORS).includes(name)) return false;\n            let bgColor = COLORS[name];\n            const nameNew = name[0].toUpperCase() + name.slice(1);\n\n            return (\n                <TypeListItem\n                    bg={bgColor}\n                    key={slot}\n                    onClick={() => {this.props.filterCards(name)}}\n                    >\n                        {nameNew}\n                </TypeListItem>\n            )\n        })\n    }\n    \n    render () {\n        const {types} = this.props;\n        const listItems = this.renderItems(types);\n\n        console.log(this.props.active);\n\n        return (\n            <TypeList>\n                {listItems}\n            </TypeList>\n        )\n    }\n}\n\nexport default CharTypes;"]},"metadata":{},"sourceType":"module"}