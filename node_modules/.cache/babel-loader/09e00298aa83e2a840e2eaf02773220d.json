{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js\";\nimport React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\nimport ServicePokedex from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 1rem;\n    position: relative;\n    \n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n`;\n_c = CardContainer;\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    // align-items: center;\n\n    @media only screen and (min-width: 600px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n    @media only screen and (min-width: 768px) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n`;\n_c2 = CardBox;\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/3;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n\n    @media only screen and (min-width: 600px) {\n        grid-column: 1/4;\n    }\n    @media only screen and (min-width: 768px) {\n        grid-column: 1/5;\n        margin: 2.5rem 0 5rem;\n    }\n    @media only screen and (min-width: 1024px) {\n        grid-column: 1/4;\n    }\n`;\n_c3 = LoadMoreBtn;\nexport default class CharContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.ServicePokedex = new ServicePokedex();\n\n    this.initCards = () => {\n      this.ServicePokedex.getResources().then(item => {\n        this.setState({\n          isLoaded: true,\n          chars: item.results\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.onCharSelected = id => {\n      this.setState({\n        selectedChar: id,\n        active: true\n      });\n    };\n\n    this.onChangeCountVisibleItems = () => {\n      let {\n        countVisibleItems\n      } = this.state;\n      countVisibleItems = countVisibleItems + 12;\n      this.setState({\n        countVisibleItems\n      });\n    };\n\n    this.filterCards = type => {\n      this.initCards();\n      let {\n        chars\n      } = this.state;\n      let newArr = [];\n      chars.map(item => {\n        this.ServicePokedex.getFilterChar(item.url).then(res => {\n          const {\n            types\n          } = res;\n          const filter = types.map(el => el.type.name === type);\n          const filterData = filter.some(el => el === true);\n          if (!filterData) return false;\n          newArr.push(item);\n        });\n        return newArr;\n      });\n      this.onChangeCountVisibleItems();\n      this.setState({\n        chars: newArr,\n        filterType: type\n      });\n    };\n\n    this.state = {\n      chars: null,\n      error: null,\n      isLoaded: false,\n      selectedChar: 1,\n      countVisibleItems: 12,\n      active: false,\n      filterType: ''\n    };\n  }\n\n  componentDidMount() {\n    this.initCards();\n  } // componentDidUpdate (prevState) {\n  //     if (prevState.chars !== this.state.chars ) {\n  //         // this.initCards();\n  //         // this.filterCards(this.state.filterType);\n  //         this.onChangeCountVisibleItems()\n  //     }\n  // }\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      chars,\n      selectedChar,\n      countVisibleItems,\n      active\n    } = this.state;\n    console.log(active);\n\n    const charList = () => {\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 24\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 24\n        }, this);\n      } else {\n        const cardItems = chars.slice(0, countVisibleItems).map((item, index) => /*#__PURE__*/_jsxDEV(CharListItem, {\n          name: item.name,\n          url: item.url,\n          charId: selectedChar,\n          onCharSelected: this.onCharSelected,\n          filterCards: this.filterCards\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this));\n        return /*#__PURE__*/_jsxDEV(CardBox, {\n          getData: this.ServicePokedex.getResources,\n          children: [cardItems, /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n            onClick: this.onChangeCountVisibleItems,\n            children: \"Load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this);\n      }\n    };\n\n    const charDescription = /*#__PURE__*/_jsxDEV(CharCardDescription, {\n      charId: this.state.selectedChar,\n      getData: this.ServicePokedex.getChar,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(CardContainer, {\n      className: \"char-container\",\n      children: [charList(), charDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"CardBox\");\n$RefreshReg$(_c3, \"LoadMoreBtn\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js"],"names":["React","Component","CharListItem","CharCardDescription","styled","ServicePokedex","CardContainer","section","CardBox","div","LoadMoreBtn","button","CharContainer","constructor","props","initCards","getResources","then","item","setState","isLoaded","chars","results","error","onCharSelected","id","selectedChar","active","onChangeCountVisibleItems","countVisibleItems","state","filterCards","type","newArr","map","getFilterChar","url","res","types","filter","el","name","filterData","some","push","filterType","componentDidMount","render","console","log","charList","message","cardItems","slice","index","charDescription","getChar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,cAAP,MAA2B,gBAA3B;;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,OAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,a;AAYN,MAAME,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMD,O;AAmBN,MAAME,WAAW,GAAGN,MAAM,CAACO,MAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;MAAMD,W;AA4BN,eAAe,MAAME,aAAN,SAA4BX,SAA5B,CAAsC;AAIjDY,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AADgB,SAFpBT,cAEoB,GAFH,IAAIA,cAAJ,EAEG;;AAAA,SAcpBU,SAdoB,GAcR,MAAM;AACd,WAAKV,cAAL,CAAoBW,YAApB,GACCC,IADD,CAEKC,IAAD,IAAU;AACN,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,KAAK,EAAEH,IAAI,CAACI;AAFF,SAAd;AAIH,OAPL,EAQKC,KAAD,IAAW;AACP,aAAKJ,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVG,UAAAA;AAFU,SAAd;AAIH,OAbL;AAeH,KA9BmB;;AAAA,SA4CpBC,cA5CoB,GA4CFC,EAAD,IAAQ;AACrB,WAAKN,QAAL,CAAc;AACVO,QAAAA,YAAY,EAAED,EADJ;AAEVE,QAAAA,MAAM,EAAE;AAFE,OAAd;AAKH,KAlDmB;;AAAA,SAoDpBC,yBApDoB,GAoDQ,MAAM;AAC9B,UAAI;AAACC,QAAAA;AAAD,UAAsB,KAAKC,KAA/B;AACAD,MAAAA,iBAAiB,GAAGA,iBAAiB,GAAG,EAAxC;AAEA,WAAKV,QAAL,CAAc;AACVU,QAAAA;AADU,OAAd;AAGH,KA3DmB;;AAAA,SA6DpBE,WA7DoB,GA6DLC,IAAD,IAAU;AACpB,WAAKjB,SAAL;AACA,UAAI;AAACM,QAAAA;AAAD,UAAU,KAAKS,KAAnB;AACA,UAAIG,MAAM,GAAG,EAAb;AAEAZ,MAAAA,KAAK,CAACa,GAAN,CAAUhB,IAAI,IAAI;AACd,aAAKb,cAAL,CAAoB8B,aAApB,CAAkCjB,IAAI,CAACkB,GAAvC,EACCnB,IADD,CAEKoB,GAAD,IAAS;AACL,gBAAM;AAACC,YAAAA;AAAD,cAAUD,GAAhB;AACA,gBAAME,MAAM,GAAGD,KAAK,CAACJ,GAAN,CAAUM,EAAE,IAAIA,EAAE,CAACR,IAAH,CAAQS,IAAR,KAAiBT,IAAjC,CAAf;AAEA,gBAAMU,UAAU,GAAGH,MAAM,CAACI,IAAP,CAAYH,EAAE,IAAIA,EAAE,KAAK,IAAzB,CAAnB;AACA,cAAI,CAACE,UAAL,EAAiB,OAAO,KAAP;AAEjBT,UAAAA,MAAM,CAACW,IAAP,CAAY1B,IAAZ;AACH,SAVL;AAYA,eAAOe,MAAP;AACH,OAdD;AAgBA,WAAKL,yBAAL;AACA,WAAKT,QAAL,CAAc;AACVE,QAAAA,KAAK,EAAEY,MADG;AAEVY,QAAAA,UAAU,EAAEb;AAFF,OAAd;AAIH,KAvFmB;;AAGhB,SAAKF,KAAL,GAAa;AACTT,MAAAA,KAAK,EAAE,IADE;AAETE,MAAAA,KAAK,EAAE,IAFE;AAGTH,MAAAA,QAAQ,EAAE,KAHD;AAITM,MAAAA,YAAY,EAAE,CAJL;AAKTG,MAAAA,iBAAiB,EAAE,EALV;AAMTF,MAAAA,MAAM,EAAE,KANC;AAOTkB,MAAAA,UAAU,EAAE;AAPH,KAAb;AASH;;AAoBDC,EAAAA,iBAAiB,GAAI;AACjB,SAAK/B,SAAL;AACH,GAtCgD,CAwCjD;AACA;AACA;AACA;AACA;AACA;AACA;;;AA+CAgC,EAAAA,MAAM,GAAI;AACN,UAAM;AAACxB,MAAAA,KAAD;AAAQH,MAAAA,QAAR;AAAkBC,MAAAA,KAAlB;AAAyBK,MAAAA,YAAzB;AAAuCG,MAAAA,iBAAvC;AAA0DF,MAAAA;AAA1D,QAAoE,KAAKG,KAA/E;AAEAkB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAZ;;AAEA,UAAMuB,QAAQ,GAAG,MAAM;AACnB,UAAI3B,KAAJ,EAAW;AACP,4BAAO;AAAA,+BAAUA,KAAK,CAAC4B,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO,IAAI,CAAC/B,QAAL,EAAe;AAClB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFM,MAEA;AACH,cAAMgC,SAAS,GAAG/B,KAAK,CAACgC,KAAN,CAAY,CAAZ,EAAexB,iBAAf,EAAkCK,GAAlC,CAAsC,CAAChB,IAAD,EAAOoC,KAAP,kBAEpD,QAAC,YAAD;AAEI,UAAA,IAAI,EAAEpC,IAAI,CAACuB,IAFf;AAGI,UAAA,GAAG,EAAEvB,IAAI,CAACkB,GAHd;AAII,UAAA,MAAM,EAAEV,YAJZ;AAKI,UAAA,cAAc,EAAE,KAAKF,cALzB;AAMI,UAAA,WAAW,EAAE,KAAKO;AANtB,WACSuB,KADT;AAAA;AAAA;AAAA;AAAA,gBAFc,CAAlB;AAYA,4BACI,QAAC,OAAD;AACI,UAAA,OAAO,EAAE,KAAKjD,cAAL,CAAoBW,YADjC;AAAA,qBAGKoC,SAHL,eAKI,QAAC,WAAD;AACI,YAAA,OAAO,EAAE,KAAKxB,yBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH;AACJ,KA9BD;;AAgCA,UAAM2B,eAAe,gBACjB,QAAC,mBAAD;AACI,MAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWJ,YADvB;AAEI,MAAA,OAAO,EAAE,KAAKrB,cAAL,CAAoBmD,OAFjC;AAGI,MAAA,MAAM,EAAE7B;AAHZ;AAAA;AAAA;AAAA;AAAA,YADJ;;AAQA,wBACI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAC,gBAAzB;AAAA,iBACKuB,QAAQ,EADb,EAEKK,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhJgD","sourcesContent":["import React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\n\nimport ServicePokedex from '../../services';\n\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 1rem;\n    position: relative;\n    \n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n`;\n\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    // align-items: center;\n\n    @media only screen and (min-width: 600px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n    @media only screen and (min-width: 768px) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n    @media only screen and (min-width: 1024px) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n`;\n\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/3;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n\n    @media only screen and (min-width: 600px) {\n        grid-column: 1/4;\n    }\n    @media only screen and (min-width: 768px) {\n        grid-column: 1/5;\n        margin: 2.5rem 0 5rem;\n    }\n    @media only screen and (min-width: 1024px) {\n        grid-column: 1/4;\n    }\n`;\n\nexport default class CharContainer extends Component {\n\n    ServicePokedex = new ServicePokedex();\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            chars: null,\n            error: null,\n            isLoaded: false,\n            selectedChar: 1,\n            countVisibleItems: 12,\n            active: false,\n            filterType: ''\n        }\n    }\n\n    initCards = () => {\n        this.ServicePokedex.getResources()\n        .then(\n            (item) => {\n                this.setState({\n                    isLoaded: true,\n                    chars: item.results\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            }\n        )\n    }\n\n    componentDidMount () {\n        this.initCards();\n    }\n\n    // componentDidUpdate (prevState) {\n    //     if (prevState.chars !== this.state.chars ) {\n    //         // this.initCards();\n    //         // this.filterCards(this.state.filterType);\n    //         this.onChangeCountVisibleItems()\n    //     }\n    // }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id,\n            active: true\n        })\n\n    }\n\n    onChangeCountVisibleItems = () => {\n        let {countVisibleItems} = this.state;\n        countVisibleItems = countVisibleItems + 12;\n        \n        this.setState({\n            countVisibleItems\n        })\n    }\n\n    filterCards = (type) => {\n        this.initCards();\n        let {chars} = this.state;\n        let newArr = [];\n\n        chars.map(item => {\n            this.ServicePokedex.getFilterChar(item.url)\n            .then(\n                (res) => {\n                    const {types} = res;\n                    const filter = types.map(el => el.type.name === type);    \n\n                    const filterData = filter.some(el => el === true);\n                    if (!filterData) return false;\n\n                    newArr.push(item);\n                }\n            )\n            return newArr;\n        })   \n        \n        this.onChangeCountVisibleItems();\n        this.setState({\n            chars: newArr,\n            filterType: type\n        })     \n    }\n    \n    render () {\n        const {error, isLoaded, chars, selectedChar, countVisibleItems, active} = this.state;\n\n        console.log(active);\n\n        const charList = () => {\n            if (error) {\n                return <p>Error {error.message}</p>\n            } else if (!isLoaded) {\n                return <h1>Loading...</h1>\n            } else {\n                const cardItems = chars.slice(0, countVisibleItems).map((item, index) => \n                (\n                    <CharListItem\n                        key={index}\n                        name={item.name}\n                        url={item.url}\n                        charId={selectedChar}\n                        onCharSelected={this.onCharSelected}\n                        filterCards={this.filterCards}\n                        />\n                ));\n    \n                return (\n                    <CardBox \n                        getData={this.ServicePokedex.getResources}\n                        >\n                        {cardItems}\n\n                        <LoadMoreBtn\n                            onClick={this.onChangeCountVisibleItems}\n                        >Load more</LoadMoreBtn>\n                    </CardBox>\n                )\n            }\n        }\n\n        const charDescription = (\n            <CharCardDescription\n                charId={this.state.selectedChar}\n                getData={this.ServicePokedex.getChar}\n                active={active}\n            />\n        )\n        \n        return (\n            <CardContainer className='char-container'>\n                {charList()}\n                {charDescription}\n            </CardContainer>\n        )        \n    }\n}"]},"metadata":{},"sourceType":"module"}