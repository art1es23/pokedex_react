{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-list/char-list.js\";\nimport React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport axios from 'axios';\nimport styled from 'styled-components'; // import './char-list.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n_c = CardBox;\nexport default class CharList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: 'https://pokeapi.co/api/v2/pokemon/',\n      char: null\n    };\n  }\n\n  async componentDidMount() {\n    // this.ServicePokedex.getResources()\n    // .then( (itemList) => {\n    //     this.setState({\n    //         itemList\n    //     })\n    // })\n    const res = await axios.get(this.state.url);\n    this.setState({\n      char: res.data['results']\n    });\n  } // renderItems (arr) {\n  //     return arr.map((item, i) => {\n  //         return (\n  //             <div\n  //                 key={i}\n  //                 className='char-list__item'\n  //                 // onClick={() => this.props.onItemSelected(id)}\n  //                 >{item.name}</div>\n  //         )\n  //     })\n  // }\n\n\n  render() {\n    // const {itemList} = this.state;\n    // const items = this.renderItems(itemList);\n    return /*#__PURE__*/_jsxDEV(CardBox, {\n      className: \"char-list\",\n      children: this.state.char ? this.state.char.map(item => /*#__PURE__*/_jsxDEV(CharListItem, {\n        name: item.name,\n        url: item.url\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n} //     renderItems (arr) {\n//         console.log(arr);\n//         return arr.map(item => {\n//             const {id} = item;\n//             console.log('id: ',id);\n//             // const label = this.props.renderItem(item);\n//             // console.log(label);\n//             return (\n//                 <div\n//                     key={id}\n//                     className='char-list__item'\n//                     // onClick={() => this.props.onItemSelected(id)}\n//                     // label={label}\n//                     ></div>\n//             )\n//         });\n//     }\n//     render () {\n//         const {data: {results}} = this.props;\n//         const items = this.renderItems(results);\n//         return (\n//             <div className=\"char-list\">\n//                 {items}\n//             </div>\n//         )\n//     }\n// }\n// const WithData = (View) => {\n//     return class extends Component {\n//         state = {\n//             data: null\n//         }\n//         // static defaultProps = {\n//         //     onItemSelected: () => {}\n//         // }\n//         // static propTypes = {\n//         //     onItemSelected: PropTypes.func\n//         // }\n//         componentDidMount () {\n//             const {getData} = this.props;\n//             getData()\n//                 .then((data) => {\n//                     // console.log(data);\n//                     this.setState({\n//                         data,\n//                         error: false\n//                     })\n//                 })\n//                 .catch()\n//         }\n//         componentDidCatch () {\n//             this.setState({\n//                 data: null,\n//                 error: true\n//             })\n//         }\n//         render () {\n//             const {data, error} = this.state;\n//             console.log('view: ', data);\n//             if (error) {\n//                 return <ErrorMessage/>\n//             }\n//             // if (!data) {\n//             //     return <Spinner/>\n//             // }\n//             return <View {...this.props} data={data}/>\n//         }\n//     }\n// }\n// export default WithData(CharList);\n\nvar _c;\n\n$RefreshReg$(_c, \"CardBox\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-list/char-list.js"],"names":["React","Component","CharListItem","axios","styled","CardBox","div","CharList","state","url","char","componentDidMount","res","get","setState","data","render","map","item","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,O;AASN,eAAe,MAAME,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAI5CO,KAJ4C,GAIpC;AACJC,MAAAA,GAAG,EAAE,oCADD;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAJoC;AAAA;;AASrB,QAAjBC,iBAAiB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,KAAKL,KAAL,CAAWC,GAArB,CAAlB;AACA,SAAKK,QAAL,CAAc;AAACJ,MAAAA,IAAI,EAAEE,GAAG,CAACG,IAAJ,CAAS,SAAT;AAAP,KAAd;AACH,GAnB2C,CAqB5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAI;AAEN;AACA;AAEA,wBACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBAEQ,KAAKR,KAAL,CAAWE,IAAX,GACI,KAAKF,KAAL,CAAWE,IAAX,CAAgBO,GAAhB,CAAoBC,IAAI,iBAEpB,QAAC,YAAD;AAEI,QAAA,IAAI,EAAEA,IAAI,CAACC,IAFf;AAGI,QAAA,GAAG,EAAED,IAAI,CAACT;AAHd,SACSS,IAAI,CAACC,IADd;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAvD2C,C,CA2DhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport axios from 'axios';\nimport styled from 'styled-components';\n// import './char-list.css';\n\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default class CharList extends Component {\n\n    // ServicePokedex = new ServicePokedex();\n    \n    state = {\n        url: 'https://pokeapi.co/api/v2/pokemon/',\n        char: null\n    }\n\n    async componentDidMount () {\n        // this.ServicePokedex.getResources()\n        // .then( (itemList) => {\n        //     this.setState({\n        //         itemList\n        //     })\n        // })\n\n        const res = await axios.get(this.state.url);\n        this.setState({char: res.data['results']});\n    }\n\n    // renderItems (arr) {\n    //     return arr.map((item, i) => {\n    //         return (\n    //             <div\n    //                 key={i}\n    //                 className='char-list__item'\n    //                 // onClick={() => this.props.onItemSelected(id)}\n    //                 >{item.name}</div>\n    //         )\n    //     })\n    // }\n\n\n    render () {\n\n        // const {itemList} = this.state;\n        // const items = this.renderItems(itemList);\n\n        return (\n            <CardBox className=\"char-list\">\n                {\n                    this.state.char ? (\n                        this.state.char.map(item => \n                        (\n                            <CharListItem\n                                key={item.name}\n                                name={item.name}\n                                url={item.url}/>\n                        ))\n                ) : (\n                    <h1>LOADING...</h1>\n                )}\n            </CardBox>\n        )\n    }\n\n}\n    \n//     renderItems (arr) {\n//         console.log(arr);\n//         return arr.map(item => {\n//             const {id} = item;\n//             console.log('id: ',id);\n//             // const label = this.props.renderItem(item);\n//             // console.log(label);\n//             return (\n//                 <div\n//                     key={id}\n//                     className='char-list__item'\n//                     // onClick={() => this.props.onItemSelected(id)}\n//                     // label={label}\n//                     ></div>\n//             )\n//         });\n//     }\n    \n//     render () {\n\n//         const {data: {results}} = this.props;\n//         const items = this.renderItems(results);\n\n//         return (\n//             <div className=\"char-list\">\n//                 {items}\n//             </div>\n//         )\n//     }\n// }\n\n// const WithData = (View) => {\n//     return class extends Component {\n\n//         state = {\n//             data: null\n//         }\n\n//         // static defaultProps = {\n//         //     onItemSelected: () => {}\n//         // }\n\n//         // static propTypes = {\n//         //     onItemSelected: PropTypes.func\n//         // }\n\n//         componentDidMount () {\n//             const {getData} = this.props;\n\n//             getData()\n//                 .then((data) => {\n//                     // console.log(data);\n//                     this.setState({\n//                         data,\n//                         error: false\n//                     })\n//                 })\n//                 .catch()\n//         }\n\n//         componentDidCatch () {\n//             this.setState({\n//                 data: null,\n//                 error: true\n//             })\n//         }\n\n//         render () {\n//             const {data, error} = this.state;\n//             console.log('view: ', data);\n\n//             if (error) {\n//                 return <ErrorMessage/>\n//             }\n\n//             // if (!data) {\n//             //     return <Spinner/>\n//             // }\n\n//             return <View {...this.props} data={data}/>\n//         }\n\n//     }\n// }\n\n// export default WithData(CharList);"]},"metadata":{},"sourceType":"module"}