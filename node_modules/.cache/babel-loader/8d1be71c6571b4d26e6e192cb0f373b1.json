{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js\";\nimport React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\nimport ServicePokedex from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2.5rem;\n    position: relative;\n`;\n_c = CardContainer;\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n_c2 = CardBox;\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/4;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n`;\n_c3 = LoadMoreBtn;\nexport default class CharContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.ServicePokedex = new ServicePokedex();\n\n    this.onCharSelected = id => {\n      // console.log(id);\n      this.setState({\n        selectedChar: id\n      });\n    };\n\n    this.onChangeCountVisibleItems = () => {\n      let {\n        countVisibleItems\n      } = this.state;\n      countVisibleItems += countVisibleItems;\n      this.setState({\n        countVisibleItems\n      });\n    };\n\n    this.filterCards = type => {\n      let {\n        chars\n      } = this.state;\n      let newArr = [];\n      let fill = chars.map(item => {\n        let some = this.ServicePokedex.getFilterChar(item.url).then(res => {\n          const {\n            types\n          } = res;\n          const filter = types.map(el => el.type.name === type); // console.log(filter);\n\n          const filterData = filter.some(el => el === true); // console.log(filterData);\n\n          if (!filterData) return false;\n          return res;\n        });\n        console.log(some);\n      }); // newArr.push(fill.value);\n      // console.log(fill[3]);\n      // this.setState({\n      //     chars: fill\n      // })\n      // console.log(fill);\n      // this.ServicePokedex.getChar();\n    };\n\n    this.state = {\n      chars: null,\n      error: null,\n      isLoaded: false,\n      selectedChar: 1,\n      countVisibleItems: 12,\n      filterType: ''\n    };\n  }\n\n  componentDidMount() {\n    this.ServicePokedex.getResources().then(item => {\n      this.setState({\n        isLoaded: true,\n        chars: item.results\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      chars,\n      selectedChar,\n      countVisibleItems\n    } = this.state; // console.log(chars);\n\n    const charList = () => {\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 24\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 24\n        }, this);\n      } else {\n        const cardItems = chars.slice(0, countVisibleItems).map((item, index) => /*#__PURE__*/_jsxDEV(CharListItem, {\n          name: item.name,\n          url: item.url,\n          charId: selectedChar,\n          onCharSelected: this.onCharSelected,\n          filterCards: this.filterCards\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this));\n        return /*#__PURE__*/_jsxDEV(CardBox // charId={this.onCharSelected}\n        , {\n          getData: this.ServicePokedex.getResources,\n          children: [cardItems, /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n            onClick: this.onChangeCountVisibleItems,\n            children: \"Load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this);\n      }\n    }; // console.log('s', this.state.selectedChar);\n\n\n    const charDescription = /*#__PURE__*/_jsxDEV(CharCardDescription, {\n      charId: this.state.selectedChar,\n      getData: this.ServicePokedex.getChar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(CardContainer, {\n      className: \"char-container\",\n      children: [charList(), charDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"CardBox\");\n$RefreshReg$(_c3, \"LoadMoreBtn\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js"],"names":["React","Component","CharListItem","CharCardDescription","styled","ServicePokedex","CardContainer","section","CardBox","div","LoadMoreBtn","button","CharContainer","constructor","props","onCharSelected","id","setState","selectedChar","onChangeCountVisibleItems","countVisibleItems","state","filterCards","type","chars","newArr","fill","map","item","some","getFilterChar","url","then","res","types","filter","el","name","filterData","console","log","error","isLoaded","filterType","componentDidMount","getResources","results","render","charList","message","cardItems","slice","index","charDescription","getChar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\n\nimport ServicePokedex from '../../services';\n\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2.5rem;\n    position: relative;\n`;\n\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/4;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n`;\n\nexport default class CharContainer extends Component {\n\n    ServicePokedex = new ServicePokedex();\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            chars: null,\n            error: null,\n            isLoaded: false,\n            selectedChar: 1,\n            countVisibleItems: 12,\n            filterType: ''\n        }\n    }\n\n    componentDidMount () {\n\n        this.ServicePokedex.getResources()\n        .then(\n            (item) => {\n                this.setState({\n                    isLoaded: true,\n                    chars: item.results\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            }\n        )\n    }\n\n    onCharSelected = (id) => {\n        // console.log(id);\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    onChangeCountVisibleItems = () => {\n        let {countVisibleItems} = this.state;\n        countVisibleItems += countVisibleItems;\n        \n        this.setState({\n            countVisibleItems\n        })\n\n    }\n\n    filterCards = (type) => {\n        \n        let {chars} = this.state;\n\n        let newArr = [];\n\n        let fill = chars.map(item => {\n            let some = this.ServicePokedex.getFilterChar(item.url)\n            .then(\n                (res) => {\n\n                    const {types} = res;\n                    const filter = types.map(el => el.type.name === type);    \n                    // console.log(filter);\n\n                    const filterData = filter.some(el => el === true);\n                    // console.log(filterData);\n                    if (!filterData) return false;\n                \n                    return res;\n                }\n            )\n\n            console.log(some);\n        });\n\n        // newArr.push(fill.value);\n        // console.log(fill[3]);\n\n        // this.setState({\n        //     chars: fill\n        // })\n\n        // console.log(fill);\n        // this.ServicePokedex.getChar();\n    \n    }\n    \n    render () {\n        const {error, isLoaded, chars, selectedChar, countVisibleItems} = this.state;\n\n        // console.log(chars);\n\n        const charList = () => {\n            if (error) {\n                return <p>Error {error.message}</p>\n            } else if (!isLoaded) {\n                return <h1>Loading...</h1>\n            } else {\n                const cardItems = chars.slice(0, countVisibleItems).map((item, index) => \n                (\n                    <CharListItem\n                        key={index}\n                        name={item.name}\n                        url={item.url}\n                        charId={selectedChar}\n                        onCharSelected={this.onCharSelected}\n                        filterCards={this.filterCards}\n                        />\n                ));\n    \n                return (\n                    <CardBox \n                        // charId={this.onCharSelected}\n                        getData={this.ServicePokedex.getResources}\n                        >\n                        {cardItems}\n\n                        <LoadMoreBtn\n                            onClick={this.onChangeCountVisibleItems}\n                        >Load more</LoadMoreBtn>\n                    </CardBox>\n                )\n            }\n        }\n        // console.log('s', this.state.selectedChar);\n\n        const charDescription = (\n            <CharCardDescription\n                charId={this.state.selectedChar}\n                getData={this.ServicePokedex.getChar}\n            />\n        )\n        \n        return (\n            <CardContainer className='char-container'>\n                {charList()}\n                {charDescription}\n            </CardContainer>\n        )        \n    }\n}"]},"metadata":{},"sourceType":"module"}