{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js\";\nimport React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\nimport ServicePokedex from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2.5rem;\n    position: relative;\n`;\n_c = CardContainer;\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n_c2 = CardBox;\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/4;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n`;\n_c3 = LoadMoreBtn;\nexport default class CharContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.ServicePokedex = new ServicePokedex();\n\n    this.onCharSelected = id => {\n      // console.log(id);\n      this.setState({\n        selectedChar: id\n      });\n    };\n\n    this.onChangeCountVisibleItems = () => {\n      let {\n        countVisibleItems\n      } = this.state;\n      countVisibleItems += countVisibleItems;\n      this.setState({\n        countVisibleItems\n      });\n    };\n\n    this.updateState = () => {\n      // console.log(chars);\n      this.filterCards(this.state.filterType);\n      let {\n        chars\n      } = this.state;\n      console.log('sadsad', chars);\n      this.setState({\n        chars\n      });\n    };\n\n    this.filterCards = type => {\n      let {\n        chars\n      } = this.state;\n      let newArr = [];\n      chars.map(item => {\n        this.ServicePokedex.getFilterChar(item.url).then(res => {\n          const {\n            types\n          } = res;\n          const filter = types.map(el => el.type.name === type);\n          const filterData = filter.some(el => el === true);\n          if (!filterData) return false;\n          newArr.push(item);\n          return newArr;\n        });\n      });\n      this.setState({\n        chars: newArr,\n        filterType: type\n      });\n    };\n\n    this.state = {\n      chars: null,\n      error: null,\n      isLoaded: false,\n      selectedChar: 1,\n      countVisibleItems: 12,\n      filterType: ''\n    };\n  }\n\n  componentDidMount() {\n    this.ServicePokedex.getResources().then(item => {\n      this.setState({\n        isLoaded: true,\n        chars: item.results\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // if (this.state.chars !== prevProps.chars) {\n    //     this.updateState()\n    // }\n    this.updateState();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      chars,\n      selectedChar,\n      countVisibleItems\n    } = this.state;\n\n    const charList = () => {\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Error \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 24\n        }, this);\n      } else if (!isLoaded) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 24\n        }, this);\n      } else {\n        const cardItems = chars.slice(0, countVisibleItems).map((item, index) => /*#__PURE__*/_jsxDEV(CharListItem, {\n          name: item.name,\n          url: item.url,\n          charId: selectedChar,\n          onCharSelected: this.onCharSelected,\n          filterCards: this.filterCards\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this));\n        return /*#__PURE__*/_jsxDEV(CardBox // charId={this.onCharSelected}\n        , {\n          getData: this.ServicePokedex.getResources,\n          children: [cardItems, /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n            onClick: this.onChangeCountVisibleItems,\n            children: \"Load more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this);\n      }\n    }; // console.log('s', this.state.selectedChar);\n\n\n    const charDescription = /*#__PURE__*/_jsxDEV(CharCardDescription, {\n      charId: this.state.selectedChar,\n      getData: this.ServicePokedex.getChar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(CardContainer, {\n      className: \"char-container\",\n      children: [charList(), charDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"CardBox\");\n$RefreshReg$(_c3, \"LoadMoreBtn\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-container/char-container.js"],"names":["React","Component","CharListItem","CharCardDescription","styled","ServicePokedex","CardContainer","section","CardBox","div","LoadMoreBtn","button","CharContainer","constructor","props","onCharSelected","id","setState","selectedChar","onChangeCountVisibleItems","countVisibleItems","state","updateState","filterCards","filterType","chars","console","log","type","newArr","map","item","getFilterChar","url","then","res","types","filter","el","name","filterData","some","push","error","isLoaded","componentDidMount","getResources","results","componentDidUpdate","prevProps","render","charList","message","cardItems","slice","index","charDescription","getChar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CharListItem from '../char-list-item';\nimport CharCardDescription from '../char-description';\nimport styled from 'styled-components';\n\nimport ServicePokedex from '../../services';\n\nconst CardContainer = styled.section`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 2.5rem;\n    position: relative;\n`;\n\nconst CardBox = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    width: 100%;\n    grid-gap: 1.5rem;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst LoadMoreBtn = styled.button`\n    grid-column: 1/4;\n    padding: 1rem;\n    margin-bottom: 5rem;\n    box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.35);\n    border: none;\n    background-color: transparent;\n    transition: all 0.3s ease-in-out;\n\n    font-size: 1.75rem;\n\n    &:hover {\n        cursor: pointer;\n        color: rgba(100,0,0,1);\n        box-shadow: 0 0 10px 1px rgba(100,0,0,0.75);\n    }\n`;\n\nexport default class CharContainer extends Component {\n\n    ServicePokedex = new ServicePokedex();\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            chars: null,\n            error: null,\n            isLoaded: false,\n            selectedChar: 1,\n            countVisibleItems: 12,\n            filterType: ''\n        }\n    }\n\n    componentDidMount () {\n        this.ServicePokedex.getResources()\n        .then(\n            (item) => {\n                this.setState({\n                    isLoaded: true,\n                    chars: item.results\n                })\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                })\n            }\n        )\n    }\n\n    componentDidUpdate (prevProps) {\n        // if (this.state.chars !== prevProps.chars) {\n        //     this.updateState()\n        // }\n        this.updateState();\n    }\n\n    onCharSelected = (id) => {\n        // console.log(id);\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    onChangeCountVisibleItems = () => {\n        let {countVisibleItems} = this.state;\n        countVisibleItems += countVisibleItems;\n        \n        this.setState({\n            countVisibleItems\n        })\n    }\n\n    updateState = () => {\n        // console.log(chars);\n        this.filterCards(this.state.filterType)\n        let {chars} = this.state;\n        console.log('sadsad',chars);\n        this.setState({chars})\n    }\n\n    filterCards = (type) => {\n        \n        let {chars} = this.state;\n\n        let newArr = [];\n\n        chars.map(item => {\n            this.ServicePokedex.getFilterChar(item.url)\n            .then(\n                (res) => {\n                    const {types} = res;\n                    const filter = types.map(el => el.type.name === type);    \n\n                    const filterData = filter.some(el => el === true);\n                    if (!filterData) return false;\n\n                    newArr.push(item);\n                    return newArr;\n                }\n            )\n        })\n                            \n        this.setState({\n            chars: newArr,\n            filterType: type\n        })        \n    }\n    \n    render () {\n        const {error, isLoaded, chars, selectedChar, countVisibleItems} = this.state;\n\n        const charList = () => {\n            if (error) {\n                return <p>Error {error.message}</p>\n            } else if (!isLoaded) {\n                return <h1>Loading...</h1>\n            } else {\n                const cardItems = chars.slice(0, countVisibleItems).map((item, index) => \n                (\n                    <CharListItem\n                        key={index}\n                        name={item.name}\n                        url={item.url}\n                        charId={selectedChar}\n                        onCharSelected={this.onCharSelected}\n                        filterCards={this.filterCards}\n                        />\n                ));\n    \n                return (\n                    <CardBox \n                        // charId={this.onCharSelected}\n                        getData={this.ServicePokedex.getResources}\n                        >\n                        {cardItems}\n\n                        <LoadMoreBtn\n                            onClick={this.onChangeCountVisibleItems}\n                        >Load more</LoadMoreBtn>\n                    </CardBox>\n                )\n            }\n        }\n        // console.log('s', this.state.selectedChar);\n\n        const charDescription = (\n            <CharCardDescription\n                charId={this.state.selectedChar}\n                getData={this.ServicePokedex.getChar}\n            />\n        )\n        \n        return (\n            <CardContainer className='char-container'>\n                {charList()}\n                {charDescription}\n            </CardContainer>\n        )        \n    }\n}"]},"metadata":{},"sourceType":"module"}