{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-description/char-description.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport ServicePokedex from '../../services';\nimport spinner from '../spinner/Spinner-5.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharDescriptionWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n_c = CharDescriptionWrapper;\nconst CharDescription = styled.div`\n    position: sticky;\n    top: 50%;\n    transform: translate(25%, -50%);\n    height: 60vh;\n    display: flex;\n    flex-direction: column;\n    width: 60%;\n    justify-content: center;\n    align-items: center;\n`;\n_c2 = CharDescription;\nexport default class CharCardDescription extends Component {\n  constructor(props) {\n    super(props);\n    this.ServicePokedex = new ServicePokedex();\n\n    this.onCharDetailsLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.state = {\n      char: [],\n      loading: true // types: []\n\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const {\n      charId,\n      getData\n    } = this.props;\n    if (!charId) return;\n    this.setState({\n      loading: true\n    }); // console.log(charId);\n    // getData(charId)\n    // .then(this.onCharDetailsLoaded)\n    // .catch()\n  } // renderItems = (arr) => {\n  //     return arr.map((item, index) => {\n  //         const {name} = item.type;            \n  //         // if (!Object.keys(COLORS).includes(name)) return false;\n  //         // let bgColor = COLORS[name];\n  //         return (\n  //             <span\n  //                 // bg={bgColor}\n  //                 key={index}>\n  //                     {name}\n  //             </span>\n  //         )\n  //     })\n  // }\n\n\n  render() {\n    const {\n      char\n    } = this.state;\n    const {\n      name,\n      types,\n      weight\n    } = char; // attack, defence, hp, sp attack, sp defence, speed, weight, total moves \n    // console.log('type ', types);\n    // const typeItems = this.renderItems(types);\n\n    return /*#__PURE__*/_jsxDEV(CharDescriptionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CharDescription, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: spinner,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharDescriptionWrapper\");\n$RefreshReg$(_c2, \"CharDescription\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-description/char-description.js"],"names":["React","Component","styled","ServicePokedex","spinner","CharDescriptionWrapper","div","CharDescription","CharCardDescription","constructor","props","onCharDetailsLoaded","char","setState","loading","state","componentDidMount","updateItem","componentDidUpdate","prevProps","charId","getData","render","name","types","weight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,cAAP,MAA2B,gBAA3B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,sBAAsB,GAAGH,MAAM,CAACI,GAAI;AAC1C;AACA;AACA;AACA;AACA,CALA;KAAMD,sB;AAON,MAAME,eAAe,GAAGL,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,e;AAYN,eAAe,MAAMC,mBAAN,SAAkCP,SAAlC,CAA4C;AAIvDQ,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AADgB,SAFpBP,cAEoB,GAFH,IAAIA,cAAJ,EAEG;;AAAA,SAoBpBQ,mBApBoB,GAoBGC,IAAD,IAAU;AAC5B,WAAKC,QAAL,CAAc;AACVD,QAAAA,IADU;AAEVE,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAzBmB;;AAGhB,SAAKC,KAAL,GAAa;AACTH,MAAAA,IAAI,EAAE,EADG;AAETE,MAAAA,OAAO,EAAE,IAFA,CAGT;;AAHS,KAAb;AAKH;;AAEDE,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,UAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3B,QAAI,KAAKT,KAAL,CAAWU,MAAX,KAAsBD,SAAS,CAACC,MAApC,EAA4C;AACxC,WAAKH,UAAL;AACH;AACJ;;AAUDA,EAAAA,UAAU,GAAI;AACV,UAAM;AAACG,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAoB,KAAKX,KAA/B;AACA,QAAI,CAACU,MAAL,EAAa;AAEb,SAAKP,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAE;AADC,KAAd,EAJU,CAQV;AAEA;AACA;AACA;AAEH,GA9CsD,CAgDvD;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAQ,EAAAA,MAAM,GAAI;AACN,UAAM;AAACV,MAAAA;AAAD,QAAS,KAAKG,KAApB;AACA,UAAM;AAACQ,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,QAAwBb,IAA9B,CAFM,CAIN;AAEA;AACA;;AAEA,wBACI,QAAC,sBAAD;AAAA,6BACI,QAAC,eAAD;AAAA,gCACI;AAAK,UAAA,GAAG,EAAER,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKmB;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCH;;AApHsD","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport ServicePokedex from '../../services';\n\nimport spinner from '../spinner/Spinner-5.gif';\n\nconst CharDescriptionWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst CharDescription = styled.div`\n    position: sticky;\n    top: 50%;\n    transform: translate(25%, -50%);\n    height: 60vh;\n    display: flex;\n    flex-direction: column;\n    width: 60%;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport default class CharCardDescription extends Component {\n\n    ServicePokedex = new ServicePokedex();\n    \n    constructor (props) {\n        super(props);\n\n        this.state = {\n            char: [],\n            loading: true,\n            // types: []\n        }\n    }\n\n    componentDidMount () {\n        this.updateItem();\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateItem();\n        }\n    }\n\n    onCharDetailsLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n\n    updateItem () {\n        const {charId, getData} = this.props;\n        if (!charId) return;\n\n        this.setState({\n            loading: true\n        });\n\n        // console.log(charId);\n\n        // getData(charId)\n        // .then(this.onCharDetailsLoaded)\n        // .catch()\n\n    }\n\n    // renderItems = (arr) => {\n    //     return arr.map((item, index) => {\n\n    //         const {name} = item.type;            \n\n    //         // if (!Object.keys(COLORS).includes(name)) return false;\n    //         // let bgColor = COLORS[name];\n\n    //         return (\n    //             <span\n    //                 // bg={bgColor}\n    //                 key={index}>\n    //                     {name}\n    //             </span>\n    //         )\n    //     })\n    // }\n\n\n    render () {\n        const {char} = this.state;\n        const {name, types, weight} = char;\n\n        // attack, defence, hp, sp attack, sp defence, speed, weight, total moves \n\n        // console.log('type ', types);\n        // const typeItems = this.renderItems(types);\n\n        return (\n            <CharDescriptionWrapper>\n                <CharDescription>\n                    <img src={spinner} alt=\"\"/>\n                    <h3>{name}</h3>\n                    <table>\n                        {/* <tr>\n                            <th><span>Type</span></th>\n                            <td>\n                                {typeItems}\n                            </td>\n                        </tr> */}\n                        {/* <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr>\n                        <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr>\n                        <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr>\n                        <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr>\n                        <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr>\n                        <tr>\n                            <th>Title</th>\n                            <td>Text</td>\n                        </tr> */}\n                    </table>\n                </CharDescription>   \n            </CharDescriptionWrapper>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}