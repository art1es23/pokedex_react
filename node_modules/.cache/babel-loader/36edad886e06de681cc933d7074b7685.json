{"ast":null,"code":"var _jsxFileName = \"/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-description/char-description.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport ServicePokedex from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharDescriptionWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n_c = CharDescriptionWrapper;\nconst CharDescription = styled.div`\n    position: sticky;\n    top: 50%;\n    transform: translate(25%, -50%);\n    height: 60vh;\n    display: flex;\n    flex-direction: column;\n    width: 60%;\n    justify-content: center;\n    align-items: center;\n`;\n_c2 = CharDescription;\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n_c3 = ImgWrapper;\nconst Sprite = styled.img`\n    width: 100%;\n    object-fit: cover;\n`;\n_c4 = Sprite;\nexport default class CharCardDescription extends Component {\n  constructor(props) {\n    super(props);\n    this.ServicePokedex = new ServicePokedex();\n\n    this.onCharDetailsLoaded = char => {\n      this.setState({\n        char // nameNew,\n\n      });\n    };\n\n    this.state = {\n      char: [],\n      error: false,\n      imgURL: '' // nameNew: ''\n\n    };\n  }\n\n  componentDidMount() {\n    this.updateItem(); // const {charId} = this.props;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateItem();\n    }\n  }\n\n  updateItem() {\n    const {\n      charId,\n      getData\n    } = this.props;\n    if (!charId) return;\n    const imgURL = `https://pokeres.bastionbot.org/images/pokemon/${charId}.png`;\n    this.setState({\n      imgURL // nameNew,\n\n    });\n    console.log(charId); // const nameNew = name[0].toUpperCase() + name.slice(1);\n\n    getData(charId).then(this.onCharDetailsLoaded).catch(() => this.onError());\n  }\n\n  onError() {\n    this.setState({\n      char: [],\n      imgURL: '',\n      error: true\n    });\n  }\n\n  render() {\n    const {\n      char,\n      imgURL\n    } = this.state;\n    const {\n      name\n    } = char; // attack, defence, hp, sp attack, sp defence, speed, weight, total moves \n\n    return /*#__PURE__*/_jsxDEV(CharDescriptionWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CharDescription, {\n        children: [/*#__PURE__*/_jsxDEV(ImgWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Sprite, {\n            src: imgURL,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CharDescriptionWrapper\");\n$RefreshReg$(_c2, \"CharDescription\");\n$RefreshReg$(_c3, \"ImgWrapper\");\n$RefreshReg$(_c4, \"Sprite\");","map":{"version":3,"sources":["/home/acer/VisualCodeProjects/qmpwwsd/teamwoy/poxedex-2/src/components/char-description/char-description.js"],"names":["React","Component","styled","ServicePokedex","CharDescriptionWrapper","div","CharDescription","ImgWrapper","Sprite","img","CharCardDescription","constructor","props","onCharDetailsLoaded","char","setState","state","error","imgURL","componentDidMount","updateItem","componentDidUpdate","prevProps","charId","getData","console","log","then","catch","onError","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,cAAP,MAA2B,gBAA3B;;AAEA,MAAMC,sBAAsB,GAAGF,MAAM,CAACG,GAAI;AAC1C;AACA;AACA;AACA;AACA,CALA;KAAMD,sB;AAON,MAAME,eAAe,GAAGJ,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMC,e;AAYN,MAAMC,UAAU,GAAGL,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,U;AAQN,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;AAC1B;AACA;AACA,CAHA;MAAMD,M;AAMN,eAAe,MAAME,mBAAN,SAAkCT,SAAlC,CAA4C;AAIvDU,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AADgB,SAFpBT,cAEoB,GAFH,IAAIA,cAAJ,EAEG;;AAAA,SAwBpBU,mBAxBoB,GAwBGC,IAAD,IAAU;AAC5B,WAAKC,QAAL,CAAc;AACVD,QAAAA,IADU,CAEV;;AAFU,OAAd;AAIH,KA7BmB;;AAGhB,SAAKE,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE,EADG;AAETG,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,MAAM,EAAE,EAHC,CAIT;;AAJS,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,SAAKC,UAAL,GADiB,CAGjB;AAEH;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3B,QAAI,KAAKV,KAAL,CAAWW,MAAX,KAAsBD,SAAS,CAACC,MAApC,EAA4C;AACxC,WAAKH,UAAL;AACH;AACJ;;AASDA,EAAAA,UAAU,GAAI;AACV,UAAM;AAACG,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAoB,KAAKZ,KAA/B;AAEA,QAAI,CAACW,MAAL,EAAa;AACb,UAAML,MAAM,GAAI,iDAAgDK,MAAO,MAAvE;AAEA,SAAKR,QAAL,CAAc;AACVG,MAAAA,MADU,CAEV;;AAFU,KAAd;AAMAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAZU,CAaV;;AAEAC,IAAAA,OAAO,CAACD,MAAD,CAAP,CACKI,IADL,CACU,KAAKd,mBADf,EAEKe,KAFL,CAEW,MAAM,KAAKC,OAAL,EAFjB;AAGH;;AAEDA,EAAAA,OAAO,GAAI;AACP,SAAKd,QAAL,CAAc;AACVD,MAAAA,IAAI,EAAE,EADI;AAEVI,MAAAA,MAAM,EAAE,EAFE;AAGVD,MAAAA,KAAK,EAAE;AAHG,KAAd;AAKH;;AAEDa,EAAAA,MAAM,GAAI;AACN,UAAM;AAAChB,MAAAA,IAAD;AAAOI,MAAAA;AAAP,QAAiB,KAAKF,KAA5B;AACA,UAAM;AAACe,MAAAA;AAAD,QAASjB,IAAf,CAFM,CAIN;;AAEA,wBACI,QAAC,sBAAD;AAAA,6BACI,QAAC,eAAD;AAAA,gCACI,QAAC,UAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEI,MAAb;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAlFsD","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport ServicePokedex from '../../services';\n\nconst CharDescriptionWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst CharDescription = styled.div`\n    position: sticky;\n    top: 50%;\n    transform: translate(25%, -50%);\n    height: 60vh;\n    display: flex;\n    flex-direction: column;\n    width: 60%;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ImgWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n\nconst Sprite = styled.img`\n    width: 100%;\n    object-fit: cover;\n`;\n\n\nexport default class CharCardDescription extends Component {\n\n    ServicePokedex = new ServicePokedex();\n    \n    constructor (props) {\n        super(props);\n\n        this.state = {\n            char: [],\n            error: false,\n            imgURL: '',\n            // nameNew: ''\n        }\n    }\n\n    componentDidMount () {\n        this.updateItem();\n\n        // const {charId} = this.props;\n\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateItem();\n        }\n    }\n\n    onCharDetailsLoaded = (char) => {\n        this.setState({\n            char\n            // nameNew,\n        });\n    }\n\n    updateItem () {\n        const {charId, getData} = this.props;\n\n        if (!charId) return;\n        const imgURL = `https://pokeres.bastionbot.org/images/pokemon/${charId}.png`;\n        \n        this.setState({\n            imgURL\n            // nameNew,\n        });\n\n\n        console.log(charId);\n        // const nameNew = name[0].toUpperCase() + name.slice(1);\n\n        getData(charId)\n            .then(this.onCharDetailsLoaded)\n            .catch(() => this.onError());\n    }\n\n    onError () {\n        this.setState({\n            char: [],\n            imgURL: '',\n            error: true\n        });\n    }\n\n    render () {\n        const {char, imgURL} = this.state;\n        const {name} = char;\n\n        // attack, defence, hp, sp attack, sp defence, speed, weight, total moves \n\n        return (\n            <CharDescriptionWrapper>\n                <CharDescription>\n                    <ImgWrapper>\n                        <Sprite src={imgURL} alt=\"\"/>\n                    </ImgWrapper>\n                    <h3>{name}</h3>\n                    <table>\n                        \n                    </table>\n                </CharDescription>   \n            </CharDescriptionWrapper>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}